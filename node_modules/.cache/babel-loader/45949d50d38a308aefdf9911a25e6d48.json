{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tristansanjuan/Desktop/AppAcademy/Cohort1/Module5/Week14/w14d4-projects/greenhouse/src/components/Hygrometer/Hygrometer.js\",\n    _s = $RefreshSig$();\n\nimport ReactSlider from \"react-slider\";\nimport \"./Hygrometer.css\";\nimport { useClimate } from '../../context/ClimateContext';\n\nfunction Hygrometer() {\n  _s();\n\n  const {\n    humidity,\n    setHumidity\n  } = useClimate();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hygrometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actual-humid\",\n      children: [\"Actual Humidity: \", \"x\", \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      value: 10,\n      onAfterChange: val => {\n        setHumidity(value);\n      },\n      className: \"hygrometer-slider\",\n      thumbClassName: \"hygrometer-thumb\",\n      trackClassName: \"hygrometer-track\",\n      ariaLabel: \"Hygrometer\",\n      orientation: \"vertical\",\n      min: 0,\n      max: 100,\n      renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        children: state.valueNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this),\n      renderTrack: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        index: state.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this),\n      invert: true,\n      pearling: true,\n      minDistance: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Hygrometer, \"QPJxFjPt7kGP3xfc1YFx6Y2wLhY=\", false, function () {\n  return [useClimate];\n});\n\n_c = Hygrometer;\nexport default Hygrometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hygrometer\");","map":{"version":3,"sources":["/Users/tristansanjuan/Desktop/AppAcademy/Cohort1/Module5/Week14/w14d4-projects/greenhouse/src/components/Hygrometer/Hygrometer.js"],"names":["ReactSlider","useClimate","Hygrometer","humidity","setHumidity","val","value","props","state","valueNow","index"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAO,kBAAP;AACA,SAASC,UAAT,QAA2B,8BAA3B;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BH,UAAU,EAA5C;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,sCAAgD,GAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,aAAa,EAAGI,GAAD,IAAS;AAACD,QAAAA,WAAW,CAACE,KAAD,CAAX;AAAmB,OAF9C;AAGE,MAAA,SAAS,EAAC,mBAHZ;AAIE,MAAA,cAAc,EAAC,kBAJjB;AAKE,MAAA,cAAc,EAAC,kBALjB;AAME,MAAA,SAAS,EAAE,YANb;AAOE,MAAA,WAAW,EAAC,UAPd;AAQE,MAAA,GAAG,EAAE,CARP;AASE,MAAA,GAAG,EAAE,GATP;AAUE,MAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,KAAR,kBAAkB,oBAASD,KAAT;AAAA,kBAAiBC,KAAK,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAVjC;AAWE,MAAA,WAAW,EAAE,CAACF,KAAD,EAAQC,KAAR,kBACX,oBAASD,KAAT;AAAgB,QAAA,KAAK,EAAEC,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZJ;AAcE,MAAA,MAAM,MAdR;AAeE,MAAA,QAAQ,MAfV;AAgBE,MAAA,WAAW,EAAE;AAhBf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA3BQR,U;UAE2BD,U;;;KAF3BC,U;AA6BT,eAAeA,UAAf","sourcesContent":["import ReactSlider from \"react-slider\";\nimport \"./Hygrometer.css\";\nimport { useClimate } from '../../context/ClimateContext'\n\nfunction Hygrometer() {\n\n  const { humidity, setHumidity } = useClimate();\n  return (\n    <section>\n      <h2>Hygrometer</h2>\n      <div className=\"actual-humid\">Actual Humidity: {\"x\"}%</div>\n      <ReactSlider\n        value={10}\n        onAfterChange={(val) => {setHumidity(value)}}\n        className=\"hygrometer-slider\"\n        thumbClassName=\"hygrometer-thumb\"\n        trackClassName=\"hygrometer-track\"\n        ariaLabel={\"Hygrometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={100}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Hygrometer;\n"]},"metadata":{},"sourceType":"module"}