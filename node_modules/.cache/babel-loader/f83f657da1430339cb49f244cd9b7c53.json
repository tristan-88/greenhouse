{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/chuck/Desktop/AppAcademy/Module5/week1/thur/greenhouse/src/components/Thermometer/Thermometer.js\";\nimport ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { useClimate } from '../../context';\n\nfunction Thermometer() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thermometer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actual-temp\",\n      children: [\"Actual Temperature: \", \"x\", \"\\xB0F\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n      value: 40,\n      onAfterChange: val => {},\n      className: \"thermometer-slider\",\n      thumbClassName: \"thermometer-thumb\",\n      trackClassName: \"thermometer-track\",\n      ariaLabel: \"Thermometer\",\n      orientation: \"vertical\",\n      min: 0,\n      max: 120,\n      renderThumb: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        children: state.valueNow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 40\n      }, this),\n      renderTrack: (props, state) => /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n        index: state.index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this),\n      invert: true,\n      pearling: true,\n      minDistance: 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Thermometer;\nexport default Thermometer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thermometer\");","map":{"version":3,"sources":["/Users/chuck/Desktop/AppAcademy/Module5/week1/thur/greenhouse/src/components/Thermometer/Thermometer.js"],"names":["ReactSlider","useClimate","Thermometer","val","props","state","valueNow","index"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,SAASC,WAAT,GAAuB;AACrB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,yCAAkD,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,aAAa,EAAGC,GAAD,IAAS,CAAE,CAF5B;AAGE,MAAA,SAAS,EAAC,oBAHZ;AAIE,MAAA,cAAc,EAAC,mBAJjB;AAKE,MAAA,cAAc,EAAC,mBALjB;AAME,MAAA,SAAS,EAAE,aANb;AAOE,MAAA,WAAW,EAAC,UAPd;AAQE,MAAA,GAAG,EAAE,CARP;AASE,MAAA,GAAG,EAAE,GATP;AAUE,MAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,KAAR,kBAAkB,oBAASD,KAAT;AAAA,kBAAiBC,KAAK,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAVjC;AAWE,MAAA,WAAW,EAAE,CAACF,KAAD,EAAQC,KAAR,kBACX,oBAASD,KAAT;AAAgB,QAAA,KAAK,EAAEC,KAAK,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA,cAZJ;AAcE,MAAA,MAAM,MAdR;AAeE,MAAA,QAAQ,MAfV;AAgBE,MAAA,WAAW,EAAE;AAhBf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KAzBQL,W;AA2BT,eAAeA,WAAf","sourcesContent":["import ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { useClimate } from '../../context'\n\nfunction Thermometer() {\n  return (\n    <section>\n      <h2>Thermometer</h2>\n      <div className=\"actual-temp\">Actual Temperature: {\"x\"}Â°F</div>\n      <ReactSlider\n        value={40}\n        onAfterChange={(val) => {}}\n        className=\"thermometer-slider\"\n        thumbClassName=\"thermometer-thumb\"\n        trackClassName=\"thermometer-track\"\n        ariaLabel={\"Thermometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={120}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Thermometer;\n"]},"metadata":{},"sourceType":"module"}